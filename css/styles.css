/* make div have no margin at top left and right */
/* 0 does not need units*/
/* 'margin' refers to all sides*/
/* Default Browser gives margin 0 to the body*/
body {
  color: #40514E;
  margin: 0;
  text-align: center; /* moves everything to center (that doesn't had a width set)*/
  font-family: 'Merriweather', serif; /* Major type of fonts*/
}

h1 {
  color: #66BFBF;
  font-size: 90px; /* 1rem = 1em = 16px; 5.625em = 90px; 100% = 16px ; 562.5% = 90px*/
  margin:50px auto 0 auto; /* auto automatically center the object; property of margin: top right bottom left, top right bottom, and top bottom. */
  font-family: 'Sacramento', cursive;
  line-height: 2; /* double line spacing */
}
h2 {
  color: #66BFBF;
  font-size: 50px;
  font-family: 'Montserrat', sans-serif;
  font-weight: normal;
}
h3 {
  color: #11999E;
  font-family: 'Montserrat', sans-serif;
}
hr {
  border-style: dotted none none;
  border-width: 6px;
  width: 50px;
  border-color: #EAF6F6;
  margin: 100px auto;

}
p {
  font-size: 16px;
}
/*-------------------------Class Selectors */
/* Containers */
.topContainer {
  position: relative;
  background-color: #e3f8ff;
  padding-top: 200px;
}
.middleContainer {
}
.bottomContainer {
  background-color: #66BFBF;
  margin: 0;
  margin-top: 100px;
  padding: 50px
}
/* mountain */
.mountain {
}
/* underline text */
.underline {
  text-decoration: underline;
}
/* clouds*/
.topCloud {
  position: absolute; /* make it position relative to topContainer by setting position of topContainer to 'relative '*/
  right: 300px;
  top: 100px;
}
.bottomCloud {
  position: absolute;
  left: 470px;
}
/* images */
.profile-image {
  border-radius: 100%;
  margin: 100px 0;
  width: 400px; /* 25% based on the parent (div)*/
}
.game-image {
  border-radius: 100%;
  width: 25%; /* 25% based on the parent (div)*/
  float: left; /* similar to warp-text in google docs */
  margin-right: 30px;
}
.piano-image {
  border-radius: 100%;
  width: 25%; /* 25% based on the parent (div)*/
  float: right; /* similar to warp-text in google docs */
  margin-right: 30px;
  margin-left: 30px;
}
.skill-row {
  width: 50%;
  margin: 150px auto; /* center */
  text-align: left;
  line-height: 2;
}
.welcome-text {
  margin-top: 50px;
}
.contact-me {
  margin: 50px auto;
}
.footer-link {
  color: #11999E;
  margin: 25px;
  text-decoration: none;
}
.footer-link:hover {
  color: #11999E;
  margin: 25px;
  text-decoration: underline;
}
.credit {
  margin-top: 50px;
  margin-bottom: 0;
}
.btn {
  background: #d934ce;
  background-image: -webkit-linear-gradient(top, #d934ce, #2980b9);
  background-image: -moz-linear-gradient(top, #d934ce, #2980b9);
  background-image: -ms-linear-gradient(top, #d934ce, #2980b9);
  background-image: -o-linear-gradient(top, #d934ce, #2980b9);
  background-image: linear-gradient(to bottom, #d934ce, #2980b9);
  -webkit-border-radius: 28;
  -moz-border-radius: 28;
  border-radius: 28px;
  text-shadow: 7px 1px 3px #666666;
  font-family: Georgia;
  color: #ffffff;
  font-size: 20px;
  padding: 13px 23px 13px 20px;
  text-decoration: none;
  margin: 200px;
}
.btn:hover {
  background: #3cfc8f;
  background-image: -webkit-linear-gradient(top, #3cfc8f, #3498db);
  background-image: -moz-linear-gradient(top, #3cfc8f, #3498db);
  background-image: -ms-linear-gradient(top, #3cfc8f, #3498db);
  background-image: -o-linear-gradient(top, #3cfc8f, #3498db);
  background-image: linear-gradient(to bottom, #3cfc8f, #3498db);
  text-decoration: none;
}
.get-in-touch {
  margin-bottom: 100px;
}
/* Relative positioning is a way to position your object (ex. image) relative to its normal position. In this case the object's left side will be pushed 30px from the original position. */
/* It's very confusing due to the fact that it can moves on other objects, as if it doesn't obey html's laws (i made up this word)*/
/* Relative positioning is to be used conjuctively with coordinates (left,right,top,bottom) */
/*
.relative-position {
  position: relative; /* the postition used to be 'static'
  left: 30px; /* create margin-left to its normal position
}
 Absolute positioning will position objects relatively to their Parent.
.absolute-position {
  position: absolute;
  left: 30px; /* move to the postion that its left padding will be 30px;
}
 Its speciality is while scrolling, objects will stay at the same position
.fixed-position {
  position: fixed;
}
*/
/* For testing
.red {
  height: 100px;
  width: 100px;
  background-color: red;
  position: absolute;
  left: 200px;
  top: 200px;
}
.blue {
  height: 100px;
  width: 100px;
  background-color: blue;
  position: absolute;
  left: 100px;
  top: 100px;
}
.yellow {
  height: 100px;
  width: 100px;
  background-color: yellow;
}
*/
